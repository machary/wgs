<?php $this->headStyle()->captureStart(); ?>
#animator-toolbar button {
	float:none;
	display: inline-block;
}
<?php $this->headStyle()->captureEnd(); ?>

<div class="flat_area grid_16">
	<a href="<?php echo $this->url(array('action'=>$this->jenis.'.index', 'id'=>null, 'cb_id'=>$this->cbId)); ?>" class="roundall_grey back_icon float-right">
		<span class="ml22">Kembali</span>
	</a>
</div>

<div class="box grid_16 round_all">
	<h2 class="box_head grad_colour">Simulasi Semua Rute Untuk CB : <?php echo $this->cb->nomor; ?></h2>
		
	<div id="map2"></div>
	
	<div class="block" id="animator-toolbar">
		<button id="button-start" type="button">Start</button>
		<button id="button-pause" type="button">Pause</button>
		<button id="button-reset" type="button">Reset</button>
		Waktu asumsi 1 detik = <input id="second2hour" value="1"> jam
		
		<div id="time-slider"></div>
		State: <span id="time-notice">0</span>
	</div>
</div>

<?php $this->inlineScript()->appendFile($this->jsUrl('script.js')); ?>
<?php $this->inlineScript()->appendFile($this->jsUrl('view/rute-operasional.js')); ?>
<?php $this->inlineScript()->appendFile($this->jsUrl('view/rute-animator.js')); ?>
<?php $this->inlineScript()->appendFile($this->jsUrl('view/ops-intel.js')); ?>
<script>

var animator,
	resetFlag = true,
    titik_referensi;

$(function () {
	var map,
		layerVector,
		$asumsi = $('#second2hour'),
		tempTitik, tempFormasi, tempRudal;
	
	$asumsi.css('display', 'inline');
	// inisiasi map
	$('#map2').css('height', '500px');
	map = standardMap('map2');
	layerVector = new OpenLayers.Layer.Vector('Rute', {
		displayInLayerSwitcher:false
	});

    //layer kekuatan musuh
    //@author : tajhul.faijin
    var layerIntel = new OpenLayers.Layer.Markers('Kekuatan Musuh', {
   		visibility : false
   	});

    //layer titik referensi
    //@author : erlan
    titik_referensi = new OpenLayers.Layer.Markers("Titik Referensi");
    titik_referensi.setVisibility(false);

	map.addLayers([layerVector, layerIntel, titik_referensi]);
    map.redrawSwitcherTree();

    //event check/uncheck layerSwitcher
    map.events.register('changelayer', null, function(e) {
        if( layerIntel.getVisibility() ){
            var $url = "<?php echo $this->siteUrl('peta/intelijen/marker.intel');?>";
            //render intel point
            intelPoints( layerIntel, $url ); // detailnya lihat di ops-intel.js
        }
    });

	// refresh features after zooming
	map.events.register('zoomend', map, function (e) {
		animator.redraw();
	});
	
	// inisiasi data
	animator = new Animator_Multi_Formasi(layerVector, $('#time-slider'), $('#time-notice'));
	<?php foreach ($this->items as $item) : ?>
		tempTitik = <?php echo json_encode($item->getTitik()); ?>;
		tempFormasi = <?php echo json_encode($item->getFormasi()); ?>;
		tempRudal = <?php echo json_encode($item->getRudal()); ?>;
		animator.addItem(tempFormasi, tempTitik, tempRudal);
	<?php endforeach; ?>
	
	// inisiasi tombol
	$asumsi.bind('change', function (e) {
		resetFlag = true;
	});
	$('#button-start').bind('click', function (e) {
		if (resetFlag) {
			animator.generateState(parseInt($asumsi.val(), 10), '<?php echo $this->satuan['kecepatan']; ?>');
			resetFlag = false;
		}
		animator.startAnimation();
	});
	$('#button-pause').bind('click', function (e) {
		animator.stopAnimation();
	});
	$('#button-reset').bind('click', function (e) {
		animator.resetAnimation();
	});

    changeMarkers();
});

function changeMarkers()
{
    map.events.register('changelayer', null, function(evt){
            if(evt.layer.name == 'Titik Referensi' && titik_referensi.visibility == true){
                parseData(2, 'referensi', '/peta/api/referensi', 0);
            }
    });
}

function parseData(id_divisi, jenis, url, matra)
{
    $.post(baseUrl + url,
        {
            "id_divisi": id_divisi
        },
        function(data){
            if(jenis == 'referensi'){
                addReferensi(data);
            }
        }, "json");
}

function addReferensi(data)
{
    AutoSizeFramedCloud = OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
        'autoSize': true
    });
    popupClass = AutoSizeFramedCloud;

    for(var i in data)
    {
        popupContentHTML = '<table style="width: 250px;">'
            +'<tr>'
            +'<th>'
            + data[i]['keterangan']
            +'</th>'
            +'</tr>'
            +'</table>';

        var iconUrl = baseUrl + '/images/info.png';

        if(data[i]['longitude'] != undefined && data[i]['latitude'] != undefined)
        {
            var realKoordinate = new OpenLayers.LonLat(data[i]['longitude'], data[i]['latitude']);

            var size = new OpenLayers.Size(21,25);
            var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
            var icon = new OpenLayers.Icon(iconUrl, size, offset);

            addMarker(titik_referensi, realKoordinate, popupClass, popupContentHTML, true, false, icon);
        }
    }
}
</script>