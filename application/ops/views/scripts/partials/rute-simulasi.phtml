<?php $this->headStyle()->captureStart(); ?>
#animator-toolbar button {
	float:none;
	display: inline-block;
}
<?php $this->headStyle()->captureEnd(); ?>

<div class="flat_area grid_16">
	<a href="<?php echo $this->url(array('action'=>$this->jenis.'.index', 'id'=>null, 'cb_id'=>$this->model->getCbId())); ?>" class="roundall_grey back_icon float-right">
		<span class="ml22">Kembali</span>
	</a>	
</div>

<div class="box grid_16 round_all">
	<h2 class="box_head grad_colour">Simulasi Rute Operasi : <?php echo $this->model->getRow()->nama; ?></h2>
	
	<div id="map2"></div>
	
	<div class="block" id="animator-toolbar">
		<div class="float-right">Jarak Tempuh : <span id="jarak-cb">0</span> <?php echo $this->satuan['jarak']; ?></div>
        <div class="float-right mr40">Waktu Tempuh : <span id="time-notice">0</span></div>
        <div class="float-right mr40">Asumsi 1 detik = <input id="second2hour" value="1" size="1"> jam </div>
		<div class="grid_16 float-left">
            <button id="button-start" type="button" class="tipsytooltip" original-title="Jalankan">
                <img src="<?php echo $this->imgUrl('icons/play.png'); ?>" style=" margin: -6px 0;" />
            </button>
            <button id="button-pause" type="button" class="tipsytooltip" original-title="Jeda">
                <img src="<?php echo $this->imgUrl('icons/pause.png'); ?>" style=" margin: -6px 0;" />
            </button>
            <button id="button-reset" type="button" class="tipsytooltip" original-title="Atur Ulang">
                <img src="<?php echo $this->imgUrl('icons/refresh.png'); ?>" style=" margin: -6px 0;" />
            </button>
            <div id="time-slider" class="grid_14 float-right"></div>
		</div>
	</div>
</div>

<?php $this->inlineScript()->appendFile($this->jsUrl('script.js')); ?>
<?php $this->inlineScript()->appendFile($this->jsUrl('view/rute-operasional.js')); ?>
<?php $this->inlineScript()->appendFile($this->jsUrl('view/rute-animator.js')); ?>
<?php $this->inlineScript()->appendFile($this->jsUrl('view/rute-statistik.js')); ?>
<?php $this->inlineScript()->appendFile($this->jsUrl('view/ops-intel.js')); ?>
<script>
var layerSimbolPergerakan,animator,titik_referensi,
	stats,
	resetFlag = true;

$(function() {
	"use strict";
	var map,
		layerVector,
		tempTitik, 
		tempFormasi,
		tempRudal,
		$asumsi,
		latumLayer, format;
		
	// inisiasi map
	$asumsi = $('#second2hour').css('display', 'inline');
	$('#map2').css('height', '500px');
	map = standardMap('map2');
	layerVector = new OpenLayers.Layer.Vector('Rute', {
		displayInLayerSwitcher:false
	});

    //layer kekuatan musuh
    //@author : tajhul.faijin
   /* var layerIntel = new OpenLayers.Layer.Markers('Kekuatan Musuh', {
   		visibility : false
   	}); */

/*	layerSimbolPergerakan = new OpenLayers.Layer.Vector('Pergerakan Musuh',{
		isBaseLayer:false, visibility:false
	}); */

    titik_referensi = new OpenLayers.Layer.Markers("Titik Referensi");
    titik_referensi.setVisibility(false);

	map.addLayers([layerVector, titik_referensi]);
    map.redrawSwitcherTree();

    //event check/uncheck layerSwitcher
    map.events.register('changelayer', null, function(e) {
        //if( layerIntel.getVisibility() ){
            //var $url = "<?php //echo $this->siteUrl('peta/intelijen/marker.intel');?>";
            //render intel point
            //intelPoints( layerIntel, $url ); // detailnya lihat di ops-intel.js
        //}
	    switch(e.layer.id)
	    {
		    case layerIntel.id:
			    if( layerIntel.getVisibility() ){
				    var $url = "<?php echo $this->siteUrl('peta/intelijen/marker.intel');?>";
				    //render intel point
				    intelPoints( layerIntel, $url ); // detailnya lihat di ops-intel.js
			    }
			    break;
		    case layerSimbolPergerakan.id:
			    $.post(baseUrl + '/latihan/api/opssimbolpergerakan',
				    {
					    "cb_id" : <?php echo $this->cbId; ?>
				    },
				    function(data){
					    insertPergerakan(data);
				    },
				    "json"
			    );
			    break;
	    }
    });

	// refresh features after zooming
	map.events.register('zoomend', map, function (e) {
		animator.redraw();
	});
	
	// animasi menggunakan multi-formasi untuk reuseability
	animator = new Animator_Multi_Formasi(layerVector, $('#time-slider'), $('#time-notice'));
	stats = new Statistik_Cb();
	tempTitik = <?php echo json_encode($this->model->getTitik()); ?>;
	tempFormasi = <?php echo json_encode($this->model->getFormasi()); ?>;
	tempRudal = <?php echo json_encode($this->model->getRudal()); ?>;

	animator.addItem(tempFormasi, tempTitik, tempRudal);
	stats.addFormasi(tempFormasi, tempTitik);
	
	// tampilkan jarak
	$('#jarak-cb').html(stats.<?php echo $this->satuan['function']; ?>.toFixed(3));

    //tipsy
    $('.tipsytooltip').tipsy();
	
	// inisiasi tombol
	$asumsi.bind('change', function(e) {
		resetFlag = true;
	});
	$('#button-start').bind('click', function(e) {
		if (resetFlag) {
			animator.generateState(parseInt($asumsi.val(), 10), '<?php echo $this->satuan['kecepatan']; ?>'); // dalam km/h
			resetFlag = false;
		}
		animator.startAnimation();
	});
	$('#button-pause').bind('click', function(e) {
		animator.stopAnimation();
	});
	$('#button-reset').bind('click', function(e) {
		animator.resetAnimation();
	});
    changeMarkers();
});

function insertPergerakan(data)
{
	for(var i in data)
	{
		if(data[i]['id_simbol_pergerakan'] != undefined)
		{
			var splitPoint = data[i]['point'].split(', ');
			var point = new OpenLayers.Geometry.Point(splitPoint[0], splitPoint[1]);
			var feature = new OpenLayers.Feature.Vector(point);
			var splitSize = data[i]['size'].split(' : ');
			var size = new OpenLayers.Size(splitSize[0], splitSize[1]);

			feature.style = {
				externalGraphic:baseUrl + data[i]['filepath'],
				graphicXOffset:-size.w/2,
				graphicYOffset:-size.h,
				graphicWidth:size.w,
				graphicHeight:size.h,
				pointRadius:0,
				rotation:data[i]['rotation']
			};

			layerSimbolPergerakan.addFeatures(feature);
		}
	}
}

function changeMarkers()
{
    map.events.register('changelayer', null, function(evt){
        if(evt.layer.name == 'Titik Referensi' && titik_referensi.visibility == true){
            parseData(2, 'referensi', '/peta/api/referensi', 0);
        }
    });
}

function parseData(id_divisi, jenis, url, matra)
{
    $.post(baseUrl + url,
        {
            "id_divisi": id_divisi
        },
        function(data){
            if(jenis == 'referensi'){
                addReferensi(data);
            }
        }, "json");
}

function addReferensi(data)
{
    AutoSizeFramedCloud = OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
        'autoSize': true
    });
    popupClass = AutoSizeFramedCloud;

    for(var i in data)
    {
        popupContentHTML = '<table style="width: 250px;">'
            +'<tr>'
            +'<th>'
            + data[i]['keterangan']
            +'</th>'
            +'</tr>'
            +'</table>';

        var iconUrl = baseUrl + '/images/info.png';

        if(data[i]['longitude'] != undefined && data[i]['latitude'] != undefined)
        {
            var realKoordinate = new OpenLayers.LonLat(data[i]['longitude'], data[i]['latitude']);

            var size = new OpenLayers.Size(21,25);
            var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
            var icon = new OpenLayers.Icon(iconUrl, size, offset);

            addMarker(titik_referensi, realKoordinate, popupClass, popupContentHTML, true, false, icon);
        }
    }
}
</script>