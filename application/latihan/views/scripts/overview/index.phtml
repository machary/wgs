<div class="flat_area grid_16">
	<h2>Overview Kekuatan</h2>
	<div id="map-wrapper" class="block">
		<div class="map-data">
			<div class="box no-margin">
				<h2 class="box_head grad_colour">Data Daerah Peta Yang Di Klik</h2>
				<a href="#" class="grabber">&nbsp;</a>
				<a href="#" class="toggle">&nbsp;</a>
				<div class="toggle_container">
					<ul class="block content_accordion">
					</ul>
				</div>
			</div>
		</div>
		<div id="map"></div>
		<div id="wrapper">
			<div id="location" style="float:right"></div>
			<div id="scale" style="float:left"></div>
			<div id="coordclick" style="width:400px;margin:auto">Clicked Coordinate : <input size="40"></div>
		</div>
	</div>
</div>

<?php $this->headStyle()->captureStart(); ?>
table.sendiri {
border: 1px solid blue;
background-color : #fff !important;
}

table.sendiri td,
table.sendiri th {
padding: 5px;
}

table.sendiri th {
background-color: blue;
border: 1px solid blue;
color: white;
}

table.popup th{
background-color: blue;
border: 1px solid blue;
color: white;
}

table.sendiri td {
border-left: 1px solid blue;
border-right: 1px solid blue;
color: blue;
}

table.musuh {
border: 1px solid red;
}

table.musuh td,
table.musuh th {
padding: 5px;
}

table.musuh th {
background-color: red;
border: 1px solid red;
color: white;
}

table.musuh td {
border-left: 1px solid red;
border-right: 1px solid red;
color: red;
}
<?php $this->headStyle()->captureEnd(); ?>

<script type="text/javascript">
var map;
var darat,laut,udara,pergerakan;//layer kekuatan sendiri
var	layerKekuatanDarat,layerKekuatanLaut,layerKekuatanUdara, simbolPergerakan ; //layer kekuatan musuh

$(function(){
	map = standardMap('map');

	udara = new OpenLayers.Layer.Markers(
		"Kekuatan Udara Sendiri",
		{isBaseLayer:false, visibility:false}
	);
	laut = new OpenLayers.Layer.Markers(
		"Kekuatan Laut Sendiri",
		{isBaseLayer:false, visibility:false}
	);
	darat = new OpenLayers.Layer.Markers(
		"Kekuatan Darat Sendiri",
		{isBaseLayer:false, visibility:false}
	);
	layerKekuatanDarat = new OpenLayers.Layer.Markers(
		"Kekuatan Darat Musuh",
		{isBaseLayer: false, visibility: false}
	);
	layerKekuatanLaut = new OpenLayers.Layer.Markers(
		"Kekuatan Laut Musuh",
		{isBaseLayer: false, visibility: false}
	);
	layerKekuatanUdara = new OpenLayers.Layer.Markers(
		"Kekuatan Udara Musuh",
		{isBaseLayer: false, visibility: false}
	);
	simbolPergerakan = new OpenLayers.Layer.Vector(
		"Simbol Pergerakan Musuh",
		{isBaseLayer: false, visibility: false}
	);
	pergerakan = new OpenLayers.Layer.Vector(
		"Simbol Pergerakan Sendiri",
		{isBaseLayer:false, visibility:false}
	);

	map.addLayers([laut,udara,darat,pergerakan,layerKekuatanDarat,layerKekuatanLaut,layerKekuatanUdara,simbolPergerakan]);
	map.redrawSwitcherTree();

	/* == Fitur Klik Dapatkan Informasi */
	map.events.register('click', map, function(e) {
		var lonlat = map.getLonLatFromViewPortPx(e.xy);
		var willan = map.layers[3]; // lihat script.js untuk listnyna

		if (willan.getVisibility()) {
			$('#tampung-data').html('<img src="<?php echo $this->imgUrl('loading1.gif'); ?>">');

			$.get('<?php echo $this->siteUrl('cms/map/get.info.lanal'); ?>', {
				lon: lonlat.lon,
				lat: lonlat.lat
			}, function(data, status, xhr) {
				$('#tampung-data').html(data);
			}, 'html');
		}
	});

	var ll, popupContentHTML;
	var AutoSizeFramedCloud = OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
		'autoSize': true,
        'panMapIfOutOfView' : true,
        'keepInMap' : true
	});

	changeMarkers();
});

function changeMarkers()
{
	map.events.register('changelayer', null, function(evt){
		switch(evt.layer.id)
		{
			case laut.id:
				if(laut.visibility == true)
				{
					var layerID = 1; //laut sendiri
					requestData( layerID );
				}
				break;
			case udara.id:
				if(udara.visibility == true)
				{
					var layerID = 2; //udara sendiri
					requestData( layerID );
				}
				break;
			case darat.id:
				if(darat.visibility == true)
				{
					var layerID = 3; //darat sendiri
					requestData( layerID );
				}
				break;
			case layerKekuatanLaut.id:
				if(layerKekuatanLaut.visibility == true)
				{
					var layerID = 4; //laut musuh
					requestData( layerID );
				}
				break;
			case layerKekuatanUdara.id:
				if(layerKekuatanUdara.visibility == true)
				{
					var layerID = 5; //udara musuh
					requestData( layerID );
				}
				break;
			case layerKekuatanDarat.id:
				if(layerKekuatanDarat.visibility == true)
				{
					var layerID = 6; //darat musuh
					requestData( layerID );
				}
				break;
			case pergerakan.id:
				if(pergerakan.visibility == true)
				{
					$.post(baseUrl + '/latihan/api/simbol.pergerakan',
						{
							"skenario_id" : '<?php echo $this->skenario; ?>',
							"table" : 2
						},
						function(data){
							insertPergerakan(data,2);
						},
						"json"
					);
				}
				break;
			case simbolPergerakan.id:
				if(simbolPergerakan.visibility == true)
				{
					$.post(baseUrl + '/latihan/api/simbol.pergerakan',
						{
							"skenario_id" : '<?php echo $this->skenario; ?>',
							"table" : 1
						},
						function(data){
							insertPergerakan(data,1);
						},
						"json"
					);
				}
				break;
		}
	});
}

function requestData(layerID){
	if(!layerID) return false;

	$.post(baseUrl + '/latihan/api/marker.selfpower',
		{
			"layer_id": layerID,
			'skenarioId' : '<?php echo $this->skenario;?>'
		},
		function(data){
			var icon;
			switch( layerID ){
				case 1 : icon = 'blue-ops-AL.png'; break;
				case 2 : icon = 'blue-ops-AU.png'; break;
				case 3 : icon = 'blue-ops-AD.png'; break;
				case 4 : icon = 'red-ops-AL.png'; break;
				case 5 : icon = 'red-ops-AU.png'; break;
				case 6 : icon = 'red-ops-AD.png'; break;
			}
			addMarkers( data, layerID, icon );
		}, "json");
}

/*
* @param (int) number, urutan index layer
* 1,2,3 = layer kekuatan sendiri
* 4,5,6 = layer kekuatan musuh
* */
function addMarkers(places, number, icon) //untuk bikin popUp
{
    var AutoSizeFramedCloud = OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
        'autoSize': true,
        'keepInMap' : true,
        'contentDisplayClass' : 'myPopupContent'
	});

	var popupClass = AutoSizeFramedCloud;

	if(number == 1 || number == 2 || number == 3)
	{
        for(var i in places){
            if(places[i]['detail'] != undefined){

                var baseICON = '';
                var detail = places[i]['detail'];
                var detLenght = detail.length;
                var first = 1;
                var counter = 1;
                var limit = 3;
                var colspan = Math.ceil( detLenght / limit );

                var html = '<table class="popup sendiri">'
                    +'<tr>'
                    +'<th align="center" colspan="'+ colspan +'">'
                    + places[i]['nama'].toUpperCase()
                    +'</th>'
                    +'</tr>';

                for(var index = 0; index <= detail.length; index++)
                {
                    if(detail[index] != undefined){
                        var now = index;
                        var value = index;
                        var data = detail[index];
                        var tableClass = 'sendiri';
                        //Fungsi makePopupContent(), <-- lihat di custom.js
                        html += makePopupContent(first, counter, value, limit, data, tableClass);
                        if(counter == limit){
                            counter = 1;
                        } else {
                            counter++;
                        }
                    }
                }
                html += '</table>';
            }

            var popupContentHTML = html;

            var realKoordinate = new OpenLayers.LonLat(places[i]['longitude'], places[i]['latitude']);
            addsMarker(realKoordinate, popupClass, popupContentHTML, true, false, number, icon, false );
        }
	}
	else if(number == 4 || number == 5 || number == 6)
	{
        for(var i in places){
            if(places[i]['detail'] != undefined){

                var baseICON = '';
                var detail = places[i]['detail'];
                var detLenght = detail.length;
                var first = 1;
                var counter = 1;
                var limit = 3;
                var colspan = Math.ceil( detLenght / limit );

                var html = '<table class="popup musuh">'
                    +'<tr>'
                    +'<th align="center" colspan="'+ colspan +'">'
                    + places[i]['nama'].toUpperCase()
                    +'</th>'
                    +'</tr>';

                for(var index = 0; index <= detail.length; index++)
                {
                    if(detail[index] != undefined){
                        var now = index;
                        var value = index;
                        var data = detail[index];
                        var tableClass = 'musuh';
                        //Fungsi makePopupContent(), <-- lihat di custom.js
                        html += makePopupContent(first, counter, value, limit, data, tableClass);
                        if(counter == limit){
                            counter = 1;
                        } else {
                            counter++;
                        }
                    }
                }
                html += '</table>';
            }
            var popupContentHTML = html;
            var realKoordinate = new OpenLayers.LonLat(places[i]['longitude'], places[i]['latitude']);
            addsMarker(realKoordinate, popupClass, popupContentHTML, true, false, number, icon, false );
        }
	}
}

function addsMarker(koordinate, popupClass, popupContentHTML, closeBox, overflow, number, icon, toggle)
{
	switch(number)
	{
		case 1:
			var feature = new OpenLayers.Feature(laut, koordinate);
			break;
		case 2:
			var feature = new OpenLayers.Feature(udara, koordinate);
			break;
		case 3:
			var feature = new OpenLayers.Feature(darat, koordinate);
			break;
		case 4:
			var feature = new OpenLayers.Feature(layerKekuatanLaut, koordinate);
			break;
		case 5:
			var feature = new OpenLayers.Feature(layerKekuatanUdara, koordinate);
			break;
		case 6:
			var feature = new OpenLayers.Feature(layerKekuatanDarat, koordinate);
			break;
	}

	var size = new OpenLayers.Size(21,25);
	var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
	var icon = new OpenLayers.Icon(baseUrl + '/images/icons/' + icon, size, offset);
	feature.data.icon = icon;

	feature.closeBox = closeBox;
	feature.popupClass = popupClass;
	feature.data.popupContentHTML = popupContentHTML;
	feature.data.overflow = (overflow) ? "auto" : "hidden";

	marker = feature.createMarker();

	var markerClick = function (evt) {
        //edited by tajhul.faijin@sangkuriang.co.id
        if( toggle === true ){
            if (this.popup == null) {
                this.popup = this.createPopup(this.closeBox);
                map.addPopup(this.popup);
                this.popup.show();
            } else {
                this.popup.toggle();
            }
        } else {
            //cleare all popup on the map
            while( map.popups.length ) {
                map.removePopup(map.popups[0]);
            }
            this.popup = this.createPopup(this.closeBox);
            map.addPopup(this.popup);
            this.popup.show();
        }
        currentPopup = this.popup;
		OpenLayers.Event.stop(evt);
	};
	marker.events.register("mousedown", feature, markerClick);
	switch(number)
	{
		case 1:
			laut.addMarker(marker);
			break;
		case 2:
			udara.addMarker(marker);
			break;
		case 3:
			darat.addMarker(marker);
			break;
		case 4:
			layerKekuatanLaut.addMarker(marker);
			break;
		case 5:
			layerKekuatanUdara.addMarker(marker);
			break;
		case 6:
			layerKekuatanDarat.addMarker(marker);
			break;
	}
}

function insertPergerakan(data, layer)
{
	for(var i in data)
	{
		if(data[i]['id_simbol_pergerakan'] != undefined)
		{
			var splitPoint = data[i]['point'].split(', ');
			var point = new OpenLayers.Geometry.Point(splitPoint[0], splitPoint[1]);
			var feature = new OpenLayers.Feature.Vector(point);
			var splitSize = data[i]['size'].split(' : ');
			var size = new OpenLayers.Size(splitSize[0], splitSize[1]);

			feature.style = {
				externalGraphic:baseUrl + '/' + data[i]['filepath'],
				graphicXOffset:-size.w/2,
				graphicYOffset:-size.h,
				graphicWidth:size.w,
				graphicHeight:size.h,
				pointRadius:0,
				rotation:data[i]['rotation']
			};

			switch(layer)
			{
				case 1:
					simbolPergerakan.addFeatures(feature);
					break;
				case 2:
					pergerakan.addFeatures(feature);
					break;
			}
		}
	}
}
</script>