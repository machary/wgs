<script type="text/javascript">
	<?php $this->inlineScript()->captureStart(); ?>
	//    Openlayer start here
	var proxyUrl = "<?php echo $this->baseUrl('peta/proxy/?url='); ?>";
	<?php $this->inlineScript()->captureEnd(); ?>
</script>

<div class="grid_8">
	<?php echo $this->form; ?>
</div>

<div class="grid_8">
	<!-- preview rute -->
	<div class="box round_all">
		<h2 class="box_head grad_colour">Preview Map</h2>
		<div id="map"></div>
	</div>
</div>

<div class="flat_area grid_16">
	<p><a href="<?php echo $this->url(array('action'=>'pergerakan')); ?>">Kembali</a></p>
</div>

<script>
var map;
var simbol_pergerakan, feature;
var result = new Array();
var sumFeature = 0;
var x = 0;
var sizeArr = {};
var rotationArr = new Array();
var simValArr = new Array();
var simTakIdArr = {};

$(function() {
	map = standardMap('map');

	var htmlAmount = '<div id="slider" style="height: 6px; width: 577px;"></div>';

	var htmlXY = '<label for="x-slider">X : </label>' +
		'<div id="x-slider" style="height: 6px; width: 577px;"></div>' +
		'<label for="y-slider">Y : </label>' +
		'<div id="y-slider" style="height: 6px; width: 577px;"></div>';

	$(htmlAmount).insertAfter('#rotation-value');
	$(htmlXY).insertAfter('#size-simbol');

	$('#rotation-value').keyup(function(){
		thisElmVal = $(this).val();
		if(thisElmVal > 180 || thisElmVal < -180){
			alert('tidak boleh lebih dari 180 atau kurang dari -180');
			$(this).val('');
		}
		else
		{
			$('#slider').slider('value', thisElmVal);
		}
	});

	var tes = new Array();
	$( "#slider" ).slider({
		value:0,
		min: -180,
		max: 180,
		step: 1,
		slide: function( event, ui ) {

			var simPer = simbol_pergerakan.features.length;
			if(simPer == 1)
			{
				simbol_pergerakan.features[0].style.rotation = ui.value;
				simbol_pergerakan.redraw();
			}
			else
			{
				for(var a = 0;a<=simPer-1;a++)
				{
					if(sizeArr == simbol_pergerakan.features[a].id)
					{
						simbol_pergerakan.features[a].style.rotation = ui.value;
						simbol_pergerakan.redraw();
					}
				}
			}
		},
		stop:function(event,ui){
			if(simbol_pergerakan.features.length == 1)
			{
				$("#rotation-value").val(ui.value);
			}
			else
			{
				var sliderArr = new Array();
				for(var a = 0;a<=simbol_pergerakan.features.length-1;a++)
				{
					if(sizeArr == simbol_pergerakan.features[a].id)
					{
						simbol_pergerakan.features[a].style.rotation = ui.value;
					}
					sliderArr.push(simbol_pergerakan.features[a].style.rotation);
				}
				$('#rotation-value').val(sliderArr.join('|'));
			}
		}
	});

	$( "#x-slider" ).slider({
		value:25,
		min: 25,
		max: 100,
		step: 1,
		slide: function( event, ui ) {
			var simPer = simbol_pergerakan.features.length;
			if(simPer == 1)
			{
				var resize = new OpenLayers.Size(ui.value, simbol_pergerakan.features[0].style.graphicWidth);

				simbol_pergerakan.features[0].style.graphicXOffset = -resize.w/2;
				simbol_pergerakan.features[0].style.graphicWidth = resize.w;
				simbol_pergerakan.redraw();
			}
			else
			{
				for(var a = 0;a<=simPer-1;a++)
				{
					if(sizeArr == simbol_pergerakan.features[a].id)
					{
						var resize = new OpenLayers.Size(ui.value, simbol_pergerakan.features[a].style.graphicWidth);

						simbol_pergerakan.features[a].style.graphicXOffset = -resize.w/2;
						simbol_pergerakan.features[a].style.graphicWidth = resize.w;
						simbol_pergerakan.redraw();
					}
				}
			}
			//$("#size-simbol").val(ui.value + ' : ' + simbol_pergerakan.features[0].style.graphicHeight);
		},
		stop:function(event, ui){
			if(simbol_pergerakan.features.length == 1)
			{
				$("#size-simbol").val(ui.value + ' : ' + simbol_pergerakan.features[0].style.graphicHeight);
			}
			else
			{
				var sliderArr = new Array();
				for(var a = 0;a<=simbol_pergerakan.features.length-1;a++)
				{
					if(sizeArr == simbol_pergerakan.features[a].id)
					{
						var resize = new OpenLayers.Size(ui.value, simbol_pergerakan.features[a].style.graphicWidth);

						simbol_pergerakan.features[a].style.graphicXOffset = -resize.w/2;
						simbol_pergerakan.features[a].style.graphicWidth = resize.w;
					}
					sliderArr.push(simbol_pergerakan.features[a].style.graphicWidth + ' : ' + simbol_pergerakan.features[a].style.graphicHeight);
				}
				//console.log(sliderArr);
				$('#size-simbol').val(sliderArr.join('|'));
			}
		}
	});

	$( "#y-slider" ).slider({
		value:29,
		min: 29,
		max: 100,
		step: 1,
		slide: function( event, ui ) {
			var simPer = simbol_pergerakan.features.length;
			if(simPer == 1)
			{
				var resize = new OpenLayers.Size(simbol_pergerakan.features[0].style.graphicHeight, ui.value);

				simbol_pergerakan.features[0].style.graphicYOffset = -resize.h;
				simbol_pergerakan.features[0].style.graphicHeight = resize.h;
				simbol_pergerakan.redraw();
			}
			else
			{
				for(var a = 0;a<=simPer-1;a++)
				{
					if(sizeArr == simbol_pergerakan.features[a].id)
					{
						var resize = new OpenLayers.Size(simbol_pergerakan.features[a].style.graphicHeight, ui.value);

						simbol_pergerakan.features[a].style.graphicYOffset = -resize.h;
						simbol_pergerakan.features[a].style.graphicHeight = resize.h;
						simbol_pergerakan.redraw();
					}
				}
			}
		},
		stop:function(event, ui){
			if(simbol_pergerakan.features.length == 1)
			{
				$("#size-simbol").val(simbol_pergerakan.features[0].style.graphicWidth + ' : ' + ui.value);
			}
			else
			{
				var sliderArr = new Array();
				for(var a = 0;a<=simbol_pergerakan.features.length-1;a++)
				{
					if(sizeArr == simbol_pergerakan.features[a].id)
					{
						var resize = new OpenLayers.Size(simbol_pergerakan.features[a].style.graphicHeight, ui.value);

						simbol_pergerakan.features[a].style.graphicYOffset = -resize.h;
						simbol_pergerakan.features[a].style.graphicHeight = resize.h;
					}
					sliderArr.push(simbol_pergerakan.features[a].style.graphicWidth + ' : ' + simbol_pergerakan.features[a].style.graphicHeight);
				}
				//console.log(sliderArr);
				$('#size-simbol').val(sliderArr.join('|'));
			}
		}
	});
});

$('#simbol-pergerakan').live('change', function(){
	if(this != '')
	{
		$.post(baseUrl + '/peta/intelijen/simbolpergerakan',
			{
				"id": $('#simbol-pergerakan').val()
			},
			function(data){
				simbolPergerkanaMarker(data, null, null, null)
			}, "json");

		result.push("117.31972955691, -1.0729132077013");
		document.getElementById('point').value = result.join('|');

		simValArr.push(this.value);
		$("#simbol_value").val(simValArr.join('|'));//input element hiden simbol_value
		console.log($("#simbol_value").val());
	}
});

function simbolPergerkanaMarker(url, koordinat, sizes, rotation)
{
	if(simbol_pergerakan == '' || simbol_pergerakan == null)
	{
		simbol_pergerakan = new OpenLayers.Layer.Vector("Simbol Pergerakan");
	}

	var point = (koordinat != null) ? new OpenLayers.Geometry.Point(koordinat[0], koordinat[1]) : new OpenLayers.Geometry.Point(117.31972955691, -1.0729132077013);//default lonlat pada saat pertama simbol muncul

	feature = new OpenLayers.Feature.Vector(point);

	var size = (sizes != null) ? new OpenLayers.Size(sizes[0],sizes[1]) : new OpenLayers.Size(25,29);//default size point
	var rot = (rotation != null) ? rotation : 0;

	feature.style ={
		externalGraphic:baseUrl + url,
		graphicXOffset:-size.w/2,
		graphicYOffset:-size.h,
		graphicWidth:size.w,
		graphicHeight:size.h,
		pointRadius:0,
		rotation:rot
	}//default size icon

	simbol_pergerakan.addFeatures(feature);
	map.addLayer(simbol_pergerakan);
	sumFeature++;

	var drag = new OpenLayers.Control.DragFeature(simbol_pergerakan,{
		'onComplete': onCompleteMove
	});//set control dan event drag

	map.addControl(drag);
	drag.activate();

	simbol_pergerakan.events.register('click', this, function(e){
		sizeArr = e.target._featureId;
		$("#slider").slider('value', e.target._style.rotation);
		$("#x-slider").slider('value', e.target._style.graphicHeight);
		$("#y-slider").slider('value', e.target._style.graphicWidth);
	});

	map.div.oncontextmenu = function noContextMenu(e) {
		if (OpenLayers.Event.isRightClick(e)){
			var confirmPolygon = function () { return confirm("Do you want to remove this polygon?") };

			var newPoint = [];
			var newRotation = [];
			var newSize = [];
			if (confirmPolygon()) {
				var tampIdFeatureDel = simbol_pergerakan.getFeatureFromEvent(e).id;
				simbol_pergerakan.destroyFeatures(simbol_pergerakan.getFeatureFromEvent(e));
				var featureCount = simbol_pergerakan.features.length;
				if(featureCount == 1)
				{
					document.getElementById('point').value = simbol_pergerakan.features[0].geometry.x + ', ' + simbol_pergerakan.features[0].geometry.y;
					document.getElementById('rotation-value').value = simbol_pergerakan.features[0].style.rotation;
					document.getElementById('size-simbol').value = simbol_pergerakan.features[0].style.graphicWidth + ' : ' + simbol_pergerakan.features[0].style.graphicHeight;

					delete simTakIdArr[tampIdFeatureDel];
					var tampIdFeature = simbol_pergerakan.features[0].id;
					$("#simbol_value").val(simTakIdArr[tampIdFeature]);
				}
				else if(featureCount == 0)
				{
					document.getElementById('point').value = '';
					document.getElementById('rotation-value').value = '';
					document.getElementById('size-simbol').value = '';
					$("#simbol_value").val('');
				}
				else if(featureCount > 1)
				{
					delete simTakIdArr[tampIdFeatureDel];
					$("#simbol_value").val('');
					simValArr.length = 0;
					featureCount = featureCount - 1;
					for(var z=0;z<=featureCount;z++){
						newPoint.push(simbol_pergerakan.features[z].geometry.x + ', ' + simbol_pergerakan.features[z].geometry.y);
						newRotation.push(simbol_pergerakan.features[z].style.rotation);
						newSize.push(simbol_pergerakan.features[z].style.graphicWidth + ' : ' + simbol_pergerakan.features[z].style.graphicHeight);

						document.getElementById('point').value = newPoint.join('|');
						document.getElementById('rotation-value').value = newRotation.join('|');
						document.getElementById('size-simbol').value = newSize.join('|');

						var tampIdFeature = simbol_pergerakan.features[z].id;
						simValArr.push(simTakIdArr[tampIdFeature]);
						$("#simbol_value").val(simValArr.join('|'));
					}
				}
			}
		}
		return false; //cancel the right click of brower
	};
}

function onCompleteMove(feature)
{
	var value = {};
	var data = {};

	if(feature.layer.features.length != sumFeature)
	{
		value["lonlat"] = feature.geometry.x + ', ' + feature.geometry.y;
		data[feature.id] = value;
		result.push(data[feature.id]['lonlat']);

		document.getElementById('point').value = result.join('|');
	}
	else
	{
		result = new Array();
		var jumlah  = feature.layer.features.length - 1;

		for(var z=0;z<=jumlah;z++)
		{
			result.push(feature.layer.features[z].geometry.x + ', ' + feature.layer.features[z].geometry.y);
		}
		document.getElementById('point').value = result.join('|');
	}

	x++;
	sumFeature = feature.layer.features.length;
}

window.onload = function(){
	var data = JSON.parse('<?php echo json_encode($this->data); ?>');
	if(data != null)
	{
		var dataLength = data.length - 1;
	}

	for(var n=0;n<=dataLength;n++)
	{
		var splitLonlat = data[n]['point'].split(', ');
		var slitSize = data[n]['size'].split(' : ');

		simbolPergerkanaMarker(data[n]['filepath'], splitLonlat, slitSize, data[n]['rotation']);
	}

	if(data != null)
	{
		var countSimTakId = simbol_pergerakan.features.length;;
	}

	if(countSimTakId == 1)
	{
		$("#simbol_value").val(data[0]['id_simbol_pergerakan']);
		simValArr.push(data[0]['id_simbol_pergerakan']);
	}
	else if(countSimTakId > 1)
	{
		for(var n=0;n<=countSimTakId - 1;n++)
		{
			var firstIdFeatures = simbol_pergerakan.features[n].id;
			simTakIdArr[firstIdFeatures] = data[n]['id_simbol_pergerakan'];
			simValArr.push(simTakIdArr[firstIdFeatures]);
		}
		$("#simbol_value").val(simValArr.join('|'));
	}
};
</script>